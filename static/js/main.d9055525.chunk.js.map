{"version":3,"sources":["store/actions/groupsActions.js","store/actions/index.js","store/initialState.js","store/reducers/groupsReducer.js","store/reducers/index.js","store/store.js","components/AddTask.js","store/actions/tasksActions.js","components/ClearGroupButton.js","components/EmptyTask.js","components/Task.js","components/Group.js","components/Taskboard.js","components/Body.js","components/Header.js","components/App.js","index.js"],"names":["sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","type","ACTIONS","DRAG_HAPPEND","payload","ADD_TASK","UPDATE_TASK","CLEAR_GROUP","initialState","className","title","id","tasks","status","cardId","groupsReducer","state","action","newTask","newState","map","group","updatedTask","task","groupId","newTasks","find","splice","groupStart","groupEnd","combineReducers","groups","store","createStore","rootReducer","connect","props","useState","setNewTask","isPending","setIsPending","aria-label","onSubmit","evt","preventDefault","dispatch","htmlFor","name","placeholder","required","value","onChange","e","target","disabled","width","height","viewBox","fill","xmlns","x","y","transform","onClick","clearGroup","EmptyTask","text","index","isEdit","setIsEdit","currTitle","setCurrTitle","editedTitle","setEditedTitle","handleChangeClick","useEffect","handleTaskSubmit","data","key","updateTask","document","addEventListener","removeEventListener","draggableId","String","provided","ref","innerRef","draggableProps","dragHandleProps","autoFocus","Group","droppableId","droppableProps","length","Taskboard","onDragEnd","result","destination","source","this","Component","Body","Header","App","ReactDOM","render","getElementById"],"mappings":"+MAEaA,EAAO,SAClBC,EACAC,EACAC,EACAC,GAEA,MAAO,CACLC,KAAMC,EAAQC,aACdC,QAAS,CACPP,mBACAC,iBACAC,sBACAC,uBCXOE,EAAU,CACrBG,SAAU,WACVC,YAAa,cACbC,YAAa,cACbJ,aAAc,gBC2CDK,EAlDM,CACnB,CACEC,UAAW,UACXC,MAAO,uCACPC,GAAI,UACJC,MAAO,CACL,CACED,GAAI,SACJD,MAAO,iDACPG,OAAQ,WAEV,CACEF,GAAI,SACJD,MAAO,mDACPG,OAAQ,aAId,CACEJ,UAAW,aACXC,MAAO,0DACPC,GAAI,UACJC,MAAO,CACL,CACED,GAAI,SACJD,MAAO,iDACPG,OAAQ,gBAId,CACEJ,UAAW,OACXC,MAAO,uCACPC,GAAI,UACJC,MAAO,IAET,CACEH,UAAW,SACXC,MAAO,6CACPC,GAAI,UACJC,MAAO,CACL,CACED,GAAI,SACJD,MAAO,YACPG,OAAQ,aCzCZC,EAAS,GA6FEC,EA3FO,WAAmC,IAAlCC,EAAiC,uDAAzBR,EAAcS,EAAW,uCACtD,OAAQA,EAAOhB,MACb,KAAKC,EAAQG,SACX,IAAMa,EAAU,CACdR,MAAOO,EAAOb,QACdS,OAAQ,UACRF,GAAG,QAAD,OAAUG,IAEdA,GAAU,EACV,IAAMK,EAAWH,EAAMI,KAAI,SAACC,GAC1B,MAAwB,YAApBA,EAAMZ,UACD,2BACFY,GADL,IAEET,MAAM,GAAD,mBACAS,EAAMT,OADN,CAEHM,MAICG,KAET,OAAOF,EAGT,KAAKjB,EAAQI,YACX,IAAMgB,EAAcL,EAAOb,QAAQmB,KAE7BJ,EAAWH,EAAMI,KAAI,SAACC,GAC1B,GAAIA,EAAMV,KAAOM,EAAOb,QAAQoB,QAAS,CACvC,IAAMC,EAAWJ,EAAMT,MAAMQ,KAAI,SAACG,GAChC,OAAIA,EAAKZ,KAAOM,EAAOb,QAAQmB,KAAKZ,GAC3BW,EAEFC,KAGT,OAAO,2BACFF,GADL,IAEET,MAAOa,IAGX,OAAOJ,KAET,OAAOF,EAGT,KAAKjB,EAAQK,YACX,IAAMY,EAAWH,EAAMI,KAAI,SAACC,GAC1B,OAAIA,EAAMV,KAAOM,EAAOb,QACf,2BACFiB,GADL,IAEET,MAAO,KAGJS,KAET,OAAOF,EAGT,KAAKjB,EAAQC,aACX,MAKIc,EAAOb,QAJTP,EADF,EACEA,iBACAC,EAFF,EAEEA,eACAC,EAHF,EAGEA,oBACAC,EAJF,EAIEA,kBAEImB,EAAQ,YAAOH,GAErB,GAAInB,IAAqBC,EAAgB,CAAC,IAAD,EACjCuB,EAAQL,EAAMU,MAAK,SAAAL,GAAK,OAAIxB,IAAqBwB,EAAMV,MACvDY,EAAOF,EAAMT,MAAMe,OAAO5B,EAAqB,IACrD,EAAAsB,EAAMT,OAAMe,OAAZ,SAAmB3B,EAAmB,GAAtC,mBAA4CuB,KAG9C,GAAI1B,IAAqBC,EAAgB,CAAC,IAAD,EACjC8B,EAAaZ,EAAMU,MAAK,SAAAL,GAAK,OAAIxB,IAAqBwB,EAAMV,MAC5DY,EAAOK,EAAWhB,MAAMe,OAAO5B,EAAqB,GAEpD8B,EAAWb,EAAMU,MAAK,SAAAL,GAAK,OAAIvB,IAAmBuB,EAAMV,MAC9DY,EAAK,GAAGV,OAASgB,EAASpB,WAC1B,EAAAoB,EAASjB,OAAMe,OAAf,SAAsB3B,EAAmB,GAAzC,mBAA+CuB,KAGjD,OAAOJ,EAGT,QACE,OAAOH,ICzFEc,cAAgB,CAC7BC,OAAQhB,ICCKiB,EAFDC,YAAYC,G,cCsDXC,iBArDC,SAACC,GACf,MAA8BC,mBAAS,IAAvC,mBAAOnB,EAAP,KAAgBoB,EAAhB,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KAaA,OACE,0BAAS/B,UAAU,WAAnB,UACE,oBAAIA,UAAU,kBAAd,mGACA,uBAAMA,UAAU,iBAAiBgC,aAAW,mIAA0BC,SAdrD,SAACC,GAKpB,ICXoBjC,EDOpBiC,EAAIC,iBAEJJ,GAAa,IAGbK,EADqBT,EAAbS,WCXYnC,EDYHQ,ECXZ,CACLjB,KAAMC,EAAQG,SACdD,QAASM,KDUT4B,EAAW,IACXE,GAAa,IAMX,UACE,sBAAK/B,UAAU,0BAAf,UACE,uBAAOqC,QAAQ,WAAf,iFACA,uBACE7C,KAAK,OAAO8C,KAAK,YAAYpC,GAAG,WAChCqC,YAAY,2FAAqBC,UAAQ,EACzCC,MAAOhC,EACPiC,SAAU,SAACC,GAAD,OAAOd,EAAWc,EAAEC,OAAOH,aAGxCX,GACE,yBAAQ9B,UAAU,0BAA0BR,KAAK,SAASqD,UAAQ,EAAlE,UACC,sBAAKC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAAlE,UACE,sBAAMC,EAAE,UAAUC,EAAE,UAAUN,MAAM,UAAUC,OAAO,UAAUE,KAAK,UACpE,sBAAME,EAAE,UAAUC,EAAE,UAAUN,MAAM,UAAUC,OAAO,UAAUM,UAAU,6BACvEJ,KAAK,aAET,2FAGFnB,GACC,yBAAQ9B,UAAU,0BAA0BR,KAAK,SAAjD,UACC,sBAAKsD,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAAlE,UACE,sBAAMC,EAAE,UAAUC,EAAE,UAAUN,MAAM,UAAUC,OAAO,UAAUE,KAAK,UACpE,sBAAME,EAAE,UAAUC,EAAE,UAAUN,MAAM,UAAUC,OAAO,UAAUM,UAAU,6BACvEJ,KAAK,aAET,gG,uCE1BGvB,iBApBU,SAAC,GAAyB,IAAxBX,EAAuB,EAAvBA,QAASqB,EAAc,EAAdA,SAOlC,OACE,yBAAQpC,UAAU,yCAAyCR,KAAK,SAAS8D,QAPvD,SAACpB,GACnBA,EAAIC,iBAEJC,EDYsB,SAACrB,GACzB,MAAO,CACLvB,KAAMC,EAAQK,YACdH,QAASoB,GCfAwC,CAAWxC,KAIpB,UACE,sBAAK+B,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAAlE,UACE,sBAAMC,EAAE,UAAUC,EAAE,UAAUN,MAAM,UAAUC,OAAO,UAAUM,UAAU,6BACvEJ,KAAK,UACP,sBAAME,EAAE,UAAUC,EAAE,UAAUN,MAAM,UAAUC,OAAO,UAAUM,UAAU,8BACvEJ,KAAK,aAET,0FCVSO,EARG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACE,qBAAKzD,UAAU,qCAAf,SACE,4BAAIyD,OCmDK/B,iBAjDF,SAAC,GAAuC,IAArCX,EAAoC,EAApCA,QAASD,EAA2B,EAA3BA,KAAM4C,EAAqB,EAArBA,MAAOtB,EAAc,EAAdA,SACpC,EAA4BR,oBAAS,GAArC,mBAAO+B,EAAP,KAAeC,EAAf,KACA,EAAkChC,mBAASd,EAAKb,OAAhD,mBAAO4D,EAAP,KAAkBC,EAAlB,KACA,EAAsClC,mBAASd,EAAKb,OAApD,mBAAO8D,EAAP,KAAoBC,EAApB,KAEMC,EAAoB,SAAC/B,GACzBA,EAAIC,iBACJyB,GAAU,IA0BZ,OAvBAM,qBAAU,WACR,IAAMC,EAAmB,SAACjC,GACxB,IAAMkC,EAAO,CACXlE,GAAIY,EAAKZ,GACTE,OAAQU,EAAKV,OACbH,MAAO8D,GAGO,UAAZ7B,EAAImC,MACNjC,EHfkB,SAACrB,EAASF,GAClC,MAAO,CACLrB,KAAMC,EAAQI,YACdF,QAAS,CACPoB,UACAD,KAAMD,IGUKyD,CAAWvD,EAASqD,IAC7BN,EAAaC,GACbH,GAAU,KAMd,OAFAW,SAASC,iBAAiB,WAAYL,GAE/B,WACLI,SAASE,oBAAoB,WAAYN,MAG1C,CAACJ,EAAaC,EAAgBH,EAAW/C,EAAKZ,GAAIY,EAAKV,OAAQW,EAASqB,IAGzE,cAAC,IAAD,CAAWsC,YAAaC,OAAO7D,EAAKZ,IAAKwD,MAAOA,EAAhD,SACG,SAACkB,GAAD,OACC,0DAAKC,IAAKD,EAASE,UAAcF,EAASG,gBAAoBH,EAASI,iBAAvE,IACEhF,UAAS,qCAAgCc,EAAKV,OAArC,YAA+CuD,EAAS,eAAiB,IADpF,UAEE,sBAAK3D,UAAU,aAAf,UACE,mBAAGA,UAAU,aAAb,SAA2B6D,IAC3B,uBAAO7D,UAAU,cAAcR,KAAK,OAAOiD,MAAOsB,EAAakB,WAAS,EAACvC,SAAU,SAACC,GAAD,OAAOqB,EAAerB,EAAEC,OAAOH,aAEpH,wBAAQzC,UAAU,aAAaR,KAAK,SAASwC,aAAW,mDAAWsB,QAASW,cCxBvEiB,EAlBD,SAAC,GAAwC,IAAvC/E,EAAsC,EAAtCA,MAAOF,EAA+B,EAA/BA,MAAOD,EAAwB,EAAxBA,UAAWe,EAAa,EAAbA,QACvC,OACE,0BAASf,UAAS,6CAAwCA,GAA1D,UACE,oBAAIA,UAAS,6DAAwDA,GAArE,SAAmFC,IACnF,cAAC,IAAD,CAAWkF,YAAaR,OAAO5D,GAA/B,SACG,SAAC6D,GAAD,OACC,gDAASA,EAASQ,gBAAlB,IAAkCP,IAAKD,EAASE,SAAU9E,UAAU,kBAApE,UACGG,EAAMQ,KAAI,SAACG,EAAM4C,GAAP,OAAiB,cAAC,EAAD,CAAM3C,QAASA,EAAS2C,MAAOA,EAAO5C,KAAMA,GAAWA,EAAKZ,OACtE,IAAjBC,EAAMkF,QAAgB,cAAC,EAAD,CAAW5B,KAAI,UAAmB,WAAdzD,EAAyB,4EAAkB,mHACrF4E,EAASrC,mBAIH,WAAdvC,GAA2B,cAAC,EAAD,CAAkBe,QAASA,QCXrDuE,E,4MAEJC,UAAY,SAACC,GACX,IAAQC,EAAwBD,EAAxBC,YAAaC,EAAWF,EAAXE,OAEhBD,GAIL,EAAK9D,MAAMS,SAASjD,EAClBuG,EAAOP,YACPM,EAAYN,YACZO,EAAOhC,MACP+B,EAAY/B,S,4CAKhB,WACE,IAAQpC,EAAWqE,KAAKhE,MAAhBL,OACR,OACE,cAAC,IAAD,CAAiBiE,UAAWI,KAAKJ,UAAjC,SACE,0BAASvF,UAAU,YAAnB,UACE,oBAAIA,UAAU,kBAAd,4EAEEsB,EAAOX,KAAI,SAACC,GAAD,OAAY,cAAC,EAAD,CACrBX,MAAOW,EAAMX,MACbD,UAAWY,EAAMZ,UACjBG,MAAOS,EAAMT,MACbY,QAASH,EAAMV,IACVU,EAAMV,gB,GA9BD0F,aA0CTlE,eAJS,SAAAnB,GAAK,MAAK,CAChCe,OAAQf,EAAMe,UAGDI,CAAyB4D,GCnCzBO,EAXF,WACX,OACE,sBAAM7F,UAAU,kBAAhB,SACE,sBAAKA,UAAU,mBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCEO8F,EAVA,WACb,OACE,wBAAQ9F,UAAU,oBAAlB,SACE,qBAAKA,UAAU,mBAAf,SACE,0GCQO+F,MATf,WACE,OACE,sBAAK/F,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCANgG,IAASC,OACP,cAAC,IAAD,CAAU1E,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFgD,SAAS2B,eAAe,W","file":"static/js/main.d9055525.chunk.js","sourcesContent":["import { ACTIONS } from './index';\n\nexport const sort = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n) => {\n  return {\n    type: ACTIONS.DRAG_HAPPEND,\n    payload: {\n      droppableIdStart,\n      droppableIdEnd,\n      droppableIndexStart,\n      droppableIndexEnd,\n    }\n  };\n};\n","export * from './tasksActions';\nexport * from './groupsActions';\n\nexport const ACTIONS = {\n  ADD_TASK: 'ADD_TASK',\n  UPDATE_TASK: 'UPDATE_TASK',\n  CLEAR_GROUP: 'CLEAR_GROUP',\n  DRAG_HAPPEND: 'DRAG_HAPPEND'\n};\n","const initialState = [\n  {\n    className: 'backlog',\n    title: 'Бэклог',\n    id: 'group-0',\n    tasks: [\n      {\n        id: 'card-0',\n        title: 'Выучить EC6',\n        status: 'backlog',\n      },\n      {\n        id: 'card-1',\n        title: 'Выучить React',\n        status: 'backlog',\n      },\n    ]\n  },\n  {\n    className: 'processing',\n    title: 'В процессе',\n    id: 'group-1',\n    tasks: [\n      {\n        id: 'card-2',\n        title: 'Выучить CSS',\n        status: 'processing',\n      },\n    ]\n  },\n  {\n    className: 'done',\n    title: 'Готово',\n    id: 'group-2',\n    tasks: []\n  },\n  {\n    className: 'basket',\n    title: 'Корзина',\n    id: 'group-3',\n    tasks: [\n      {\n        id: 'card-3',\n        title: 'Chill out',\n        status: 'basket',\n      },\n    ]\n  }\n];\n\nexport default initialState;\n","import { ACTIONS } from '../actions/index';\nimport initialState from '../initialState';\n\nlet cardId = 10;\n\nconst groupsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD_TASK: {\n      const newTask = {\n        title: action.payload,\n        status: 'backlog',\n        id: `card-${cardId}`,\n      };\n      cardId += 1;\n      const newState = state.map((group) => {\n        if (group.className === 'backlog') {\n          return {\n            ...group,\n            tasks: [\n              ...group.tasks,\n              newTask,\n            ]\n          }\n        }\n        return group;\n      });\n      return newState;\n    }\n\n    case ACTIONS.UPDATE_TASK: {\n      const updatedTask = action.payload.task;\n\n      const newState = state.map((group) => {\n        if (group.id === action.payload.groupId) {\n          const newTasks = group.tasks.map((task) => {\n            if (task.id === action.payload.task.id) {\n              return updatedTask;\n            }\n            return task;\n          });\n\n          return {\n            ...group,\n            tasks: newTasks,\n          }\n        }\n        return group;\n      });\n      return newState;\n    }\n\n    case ACTIONS.CLEAR_GROUP: {\n      const newState = state.map((group) => {\n        if (group.id === action.payload) {\n          return {\n            ...group,\n            tasks: [],\n          }\n        }\n        return group;\n      });\n      return newState;\n    }\n\n    case ACTIONS.DRAG_HAPPEND: {\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexStart,\n        droppableIndexEnd,\n      } = action.payload;\n      const newState = [...state];\n\n      if (droppableIdStart === droppableIdEnd) {\n        const group = state.find(group => droppableIdStart === group.id);\n        const task = group.tasks.splice(droppableIndexStart, 1);\n        group.tasks.splice(droppableIndexEnd, 0, ...task);\n      }\n\n      if (droppableIdStart !== droppableIdEnd) {\n        const groupStart = state.find(group => droppableIdStart === group.id);\n        const task = groupStart.tasks.splice(droppableIndexStart, 1);\n\n        const groupEnd = state.find(group => droppableIdEnd === group.id);\n        task[0].status = groupEnd.className;\n        groupEnd.tasks.splice(droppableIndexEnd, 0, ...task);\n      }\n\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default groupsReducer;\n","import { combineReducers } from 'redux';\nimport groupsReducer from './groupsReducer';\n\nexport default combineReducers({\n  groups: groupsReducer\n});\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer)\n\nexport default store; ","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addTask } from '../store/actions/';\n\nconst AddTask = (props) => {\n  const [newTask, setNewTask] = useState('');\n  const [isPending, setIsPending] = useState(false);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    setIsPending(true);\n\n    const { dispatch } = props;\n    dispatch(addTask(newTask));\n    setNewTask('');\n    setIsPending(false);\n  };\n\n  return (\n    <section className=\"add-task\">\n      <h2 className=\"visually-hidden\">Добавить задачу</h2>\n      <form className=\"add-task__form\" aria-label=\"Форма добавления задачи\" onSubmit={handleSubmit}>\n        <div className=\"add-task__input-wrapper\">\n          <label htmlFor=\"add-task\">Новая задача</label>\n          <input \n            type=\"text\" name=\"task-name\" id=\"add-task\"\n            placeholder=\"Название задачи...\" required\n            value={newTask}\n            onChange={(e) => setNewTask(e.target.value)}\n          />\n        </div>\n        {isPending && \n          (<button className=\"add-task__button button\" type=\"submit\" disabled>\n            <svg width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <rect x=\"10.0833\" y=\"3.66663\" width=\"1.83333\" height=\"14.6667\" fill=\"white\" />\n              <rect x=\"18.3333\" y=\"10.0833\" width=\"1.83333\" height=\"14.6667\" transform=\"rotate(90 18.3333 10.0833)\"\n                fill=\"white\" />\n            </svg>\n            <span>Добавляю...</span>\n          </button>)\n        }\n        {!isPending && \n          (<button className=\"add-task__button button\" type=\"submit\">\n            <svg width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <rect x=\"10.0833\" y=\"3.66663\" width=\"1.83333\" height=\"14.6667\" fill=\"white\" />\n              <rect x=\"18.3333\" y=\"10.0833\" width=\"1.83333\" height=\"14.6667\" transform=\"rotate(90 18.3333 10.0833)\"\n                fill=\"white\" />\n            </svg>\n            <span>Добавить</span>\n          </button>)\n        }\n      </form>\n    </section>\n  );\n}\n\nexport default connect()(AddTask);\n","import { ACTIONS } from './index';\n\nexport const addTask = (title) => {\n  return {\n    type: ACTIONS.ADD_TASK,\n    payload: title,\n  };\n};\n\nexport const updateTask = (groupId, updatedTask) => {\n  return {\n    type: ACTIONS.UPDATE_TASK,\n    payload: {\n      groupId,\n      task: updatedTask,\n    }\n  };\n};\n\nexport const clearGroup = (groupId) => {\n  return {\n    type: ACTIONS.CLEAR_GROUP,\n    payload: groupId,\n  };\n};\n","import { connect } from 'react-redux';\nimport { clearGroup } from '../store/actions'\n\nconst ClearGroupButton = ({groupId, dispatch}) => {\n  const handleClick = (evt) => {\n    evt.preventDefault();\n\n    dispatch(clearGroup(groupId))\n  }\n\n  return (\n    <button className=\"taskboard__button button button--clear\" type=\"button\" onClick={handleClick}>\n      <svg width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect x=\"15.5374\" y=\"5.16638\" width=\"1.83333\" height=\"14.6667\" transform=\"rotate(45 15.5374 5.16638)\"\n          fill=\"white\" />\n        <rect x=\"16.8337\" y=\"15.5372\" width=\"1.83333\" height=\"14.6667\" transform=\"rotate(135 16.8337 15.5372)\"\n          fill=\"white\" />\n      </svg>\n      <span>Очистить</span>\n    </button>\n  );\n}\n\nexport default connect()(ClearGroupButton);\n","const EmptyTask = ({ text }) => {\n  return (\n    <div className=\"task--empty task task--empty-trash\">\n      <p>{text}</p>\n    </div>\n  );\n}\n\nexport default EmptyTask;\n","import { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { updateTask } from '../store/actions';\n\nconst Task = ({ groupId, task, index, dispatch}) => {\n  const [isEdit, setIsEdit] = useState(false);\n  const [currTitle, setCurrTitle] = useState(task.title);\n  const [editedTitle, setEditedTitle] = useState(task.title);\n\n  const handleChangeClick = (evt) => {\n    evt.preventDefault();\n    setIsEdit(true);\n  }\n\n  useEffect(() => {\n    const handleTaskSubmit = (evt) => {\n      const data = {\n        id: task.id,\n        status: task.status,\n        title: editedTitle,\n      };\n\n      if (evt.key === 'Enter') {\n        dispatch(updateTask(groupId, data));\n        setCurrTitle(editedTitle);\n        setIsEdit(false);\n      }\n    }\n\n    document.addEventListener('keypress', handleTaskSubmit);\n\n    return () => {\n      document.removeEventListener('keypress', handleTaskSubmit);\n    }\n\n  }, [editedTitle, setEditedTitle, currTitle, task.id, task.status, groupId, dispatch])\n\n  return (\n    <Draggable draggableId={String(task.id)} index={index}>\n      {(provided) => (\n        <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}\n          className={`taskboard__item task task--${task.status} ${isEdit ? 'task--active' : ''}`}>\n          <div className=\"task__body\">\n            <p className=\"task__view\">{currTitle}</p>\n            <input className=\"task__input\" type=\"text\" value={editedTitle} autoFocus onChange={(e) => setEditedTitle(e.target.value)} />\n          </div>\n          <button className=\"task__edit\" type=\"button\" aria-label=\"Изменить\" onClick={handleChangeClick}></button>\n        </div>\n      )}\n    </Draggable>\n  );\n}\n\nexport default connect()(Task);\n","import { Droppable } from 'react-beautiful-dnd';\nimport ClearGroupButton from './ClearGroupButton';\nimport EmptyTask from './EmptyTask';\nimport Task from './Task';\n\nconst Group = ({tasks, title, className, groupId}) => {\n  return (\n    <article className={`taskboard__group taskboard__group--${className}`}>\n      <h3 className={`taskboard__group-heading taskboard__group-heading--${className}`}>{title}</h3>\n      <Droppable droppableId={String(groupId)}>\n        {(provided) => (\n          <div {...provided.droppableProps} ref={provided.innerRef} className=\"taskboard__list\">\n            {tasks.map((task, index) => <Task groupId={groupId} index={index} task={task} key={task.id}/>)}\n            {tasks.length === 0 && <EmptyTask text={`${className === 'basket' ? 'Корзина пуста' : 'Перетащите карточку'}`} /> }\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    {className === 'basket' &&  <ClearGroupButton groupId={groupId} />}\n    </article>\n  );\n}\n\nexport default Group;\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { sort } from '../store/actions';\nimport Group from './Group';\n\n\nclass Taskboard extends Component {\n\n  onDragEnd = (result) => {\n    const { destination, source } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    this.props.dispatch(sort(\n      source.droppableId,\n      destination.droppableId,\n      source.index,\n      destination.index,\n    ))\n\n  }\n\n  render() {\n    const { groups } = this.props;\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <section className=\"taskboard\">\n          <h2 className=\"visually-hidden\">Ваши задачи:</h2>\n          {\n            groups.map((group) => (<Group\n              title={group.title}\n              className={group.className}\n              tasks={group.tasks}\n              groupId={group.id}\n              key={group.id} />))\n          }\n        </section>\n      </DragDropContext>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  groups: state.groups\n})\n\nexport default connect(mapStateToProps)(Taskboard);\n","import AddTask from './AddTask';\nimport Taskboard from './Taskboard';\n\nconst Body = () => {\n  return (\n    <main className=\"board-app__main\">\n      <div className=\"board-app__inner\">\n        <AddTask />\n        <Taskboard />\n      </div>\n    </main>\n  );\n}\n\nexport default Body;\n","const Header = () => {\n  return (\n    <header className=\"board-app__header\">\n      <div className=\"board-app__inner\">\n        <h1>Канбан-доска</h1>\n      </div>\n  </header>\n  );\n}\n \nexport default Header;","import Body from './Body';\nimport Header from './Header';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Body/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './css/index.css';\nimport store from './store/store';\nimport App from './components/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}